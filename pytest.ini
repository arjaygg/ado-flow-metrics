[pytest]
# ADO Flow Metrics - Comprehensive Test Configuration
# Following agile test pyramid principles

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers - organizing tests by pyramid level
markers =
    unit: Unit tests (70% of test pyramid) - fast, isolated, comprehensive coverage
    integration: Integration tests (20% of test pyramid) - API, database, services
    e2e: End-to-end tests (10% of test pyramid) - UI, full workflows
    performance: Performance tests - benchmarks, load testing, regression
    slow: Slow running tests - may take more than 1 second
    smoke: Smoke tests - quick health checks
    security: Security tests - vulnerability, compliance
    regression: Regression tests - prevent performance degradation
    mock: Tests using mocks - mocked external dependencies
    critical: Critical functionality tests - core features
    edge_case: Edge case and boundary tests - unusual scenarios

# Test execution options
addopts =
    -v
    --strict-markers
    --tb=short
    --durations=10
    --color=yes
    --disable-warnings
    --cov-config=.coveragerc
    --cov-branch
    --cov-fail-under=70
    --junit-xml=test-results/junit.xml
    --html=test-results/report.html
    --self-contained-html
    --maxfail=5

# Test filtering
minversion = 6.0
required_plugins =
    pytest-cov>=4.0.0
    pytest-html>=3.1.0
    pytest-mock>=3.10.0
    pytest-asyncio>=0.21.0
    pytest-xdist>=3.0.0
    pytest-benchmark>=4.0.0
    pytest-playwright>=0.3.0

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::RuntimeWarning:asyncio
    ignore::UserWarning:urllib3

# Test timeouts
timeout = 300
timeout_method = thread

# Coverage configuration
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    .pytest_cache
    htmlcov
    .coverage*
    node_modules
    .swarm

# Test performance
cache_dir = .pytest_cache
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test collection patterns
collect_ignore = venv build dist .git __pycache__ .swarm

# Custom options for our test pyramid
pythonpath = . src tests
testmon_datadir = .testmondata

# Parallel execution
xfail_strict = true
